using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class Player : MonoBehaviour
{
    private CharacterController _controller;

    [SerializeField]
    private AudioSource _weaponaudio;
    [SerializeField]
    AudioSource _backgorundsource;
    [SerializeField]
    AudioSource _ambientsource;
   

    [SerializeField]
    private int _currentAmmo;
    [SerializeField]
    private int maxAmmo = 100;

    private bool _isReloading = false;

    public bool _hasCoin = false;

    [SerializeField]
    private float _speed = 3.5f;
    [SerializeField]
    private float _gravity = 9.18f;

    [SerializeField]
    private GameObject _MuzzleFlashPrefab;
    [SerializeField]
    private GameObject _HitMarker;
    [SerializeField]
    private GameObject _weapon;

    private UI_Manager _uiManager;

    // Start is called before the first frame update
    void Start()
    {
        _controller = GetComponent<CharacterController>();
        Cursor.visible = false;
        Cursor.lockState = CursorLockMode.Locked;

        _backgorundsource.Play();
        _ambientsource.Play();

        _currentAmmo = maxAmmo;

        _uiManager = GameObject.Find("Canvas").GetComponent<UI_Manager>();

        
    }

    // Update is called once per frame
    void Update()
    {
        

        if (Input.GetMouseButton(0) && _currentAmmo > 0)
        {
            Shoot();
        }

        else
        {
            _MuzzleFlashPrefab.SetActive(false);
            _weaponaudio.Stop();
        }

        if (Input.GetKeyDown(KeyCode.R))
        {
            _isReloading = true;
            StartCoroutine(Reload());
        }

        MovePlayer();
    }

    void Shoot()
    {
        _currentAmmo--;

        _MuzzleFlashPrefab.SetActive(true);

        _uiManager.updateAmmo(_currentAmmo);

        if (_weaponaudio.isPlaying == false)
        {
            _weaponaudio.Play();
        }

        Ray rayorigin = Camera.main.ViewportPointToRay(new Vector3(0.5f, 0.5f, 0));
        RaycastHit Hitinfo;

        if (Physics.Raycast(rayorigin, out Hitinfo))

        {
            Debug.Log("Hit: " + Hitinfo.transform.name);
            GameObject Hitamarker = Instantiate(_HitMarker, Hitinfo.point, Quaternion.LookRotation(Hitinfo.normal));
            Destroy(Hitamarker, 0.000001f);
        }

    }


    void MovePlayer()
    {
        float HorizontalInput = Input.GetAxis("Horizontal");
        float VerticalInput = Input.GetAxis("Vertical");
        Vector3 _direction = new Vector3(HorizontalInput, 0, VerticalInput);
        Vector3 _velocity = _direction * _speed;
        _velocity.y -= _gravity;

        _velocity = transform.transform.TransformDirection(_velocity);
        _controller.Move(_velocity * Time.deltaTime);
    }

    IEnumerator Reload()

    {
        yield return new WaitForSeconds(1.5f);
        _currentAmmo = maxAmmo;
        _isReloading = false;
        _uiManager.updateAmmo(_currentAmmo);

    }

   public void buyWeapon()
    {
        _weapon.SetActive(true);
    }

   
}   
